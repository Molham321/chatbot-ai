"""
Django settings for chatbot_logic project.

Generated by 'django-admin startproject' using Django 2.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import mimetypes

mimetypes.add_type("image/svg+xml", ".svg", True)
mimetypes.add_type("image/svg+xml", ".svgz", True)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ['DEBUG'] == "true"

CSRF_COOKIE_SECURE = os.environ['CSRF_COOKIE_SECURE'] == "true"
SESSION_COOKIE_SECURE = os.environ['SESSION_COOKIE_SECURE'] == "true"

SECURE_SSL_REDIRECT = False
SECURE_SSL_HOST = False

ALLOWED_HOSTS = [
    os.environ['ALLOWED_HOST']
]

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'chatbot_logic.apps.ChatbotLogicConfig',
    'chatbot_logging.apps.ChatbotLoggingConfig',
    'admin_panel.apps.AdminPanelConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fhe_chatbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fhe_chatbot.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

database_engine = 'django.db.backends.mysql' if os.environ['DATABASE_ENGINE'] == 'mysql' \
    else 'django.db.backends.sqlite3'

if os.environ['DATABASE_ENGINE'] == 'mysql':
    database_fields = {
        "OPTIONS": {
            "read_default_file": os.environ['DATABASE_FILE']
        }
    }
else:
    database_fields = {
        "NAME": os.environ['DATABASE_FILE']
    }

DATABASES = {
    'default': {
        'ENGINE': database_engine,
        **database_fields
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'de'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = 'static/'

if not DEBUG:
    STATICFILES_DIRS = [
        os.environ['STATIC_FILES_DIR']
    ]

REST_FRAMEWORK = {
    # enable JSON renderer by default
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.StaticHTMLRenderer',
    ],
}

ASGI_APPLICATION = "chatbot_logic.routing.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': "channels.layers.InMemoryChannelLayer"
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

MAIL_SETTINGS = {
    'server': os.environ['SMTP_SERVER'],
    'port': os.environ['SMTP_PORT'],
    'username': os.environ['SMTP_USERNAME'],
    'recipient': os.environ['SMTP_RECIPIENT'],
    'sender': os.environ['SMTP_SENDER'],
    'password': os.environ['SMTP_PASSWORD']
}
